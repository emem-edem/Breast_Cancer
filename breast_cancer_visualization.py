# -*- coding: utf-8 -*-
"""Breast_Cancer_Visualization.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ym0qLAXi4ySaH3P_CLHJCB_exmZ1TjAN

## **Breast Cancer Visualization Dataset**

This Is my first Project of visualizing Data. The goal is visualize the data, with univariate and multivariate plots.
"""

import pandas as pd
from pandas import read_csv
from pandas.plotting import scatter_matrix
from matplotlib import pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.model_selection import cross_val_score
from sklearn.model_selection import StratifiedKFold
from sklearn.metrics import classification_report
from sklearn.metrics import confusion_matrix
from sklearn.metrics import accuracy_score
from sklearn.linear_model import LogisticRegression
from sklearn.tree import DecisionTreeClassifier
from sklearn.neighbors import KNeighborsClassifier
from sklearn.discriminant_analysis import LinearDiscriminantAnalysis
from sklearn.naive_bayes import GaussianNB
from sklearn.svm import SVC

from pandas import read_csv
from sklearn import datasets
#Load the dataset
data = datasets.load_breast_cancer(as_frame=True)
df = pd.DataFrame(data.data, columns=data.feature_names)
print(data['DESCR'])

df['diagnosis'] = data.target
df['diagnosis'] = df['diagnosis'].map({0: 'malignant', 1: 'benign'})
print(df.head())

import pandas as pd
X, y = data.data, data.target
dataframe = pd.DataFrame(X, columns=data['feature_names'])
names = {v: k for v, k in enumerate(data.target_names)}
dataframe['target'] = y.replace(to_replace=names)
dataframe.head()

#visualize the data
import seaborn as sns
sns.pairplot(dataframe, hue='target', diag_kind='kde')

#refining the visualization for the 'mean' values
sns.pairplot(dataframe, hue='target', vars = ['mean radius', 'mean texture', 'mean area', 'mean smoothness', 'mean concave points', 'mean compactness', 'mean concavity', 'mean symmetry', 'mean fractal dimension'])

#visualization for 'worst' values.
sns.pairplot(dataframe, hue='target', palette='Spectral', vars = ['worst radius', 'worst texture', 'worst area', 'worst smoothness', 'worst concave points', 'worst concavity', 'worst fractal dimension', 'worst perimeter', 'worst compactness'])